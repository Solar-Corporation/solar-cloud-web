/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface UserDir {
  uuid: string;
  storage: number;
}
export interface UserFile {
  buffer?: Buffer;
  filePath: string;
  mimeType?: string;
  seeTime?: number;
  size?: number;
}
export interface DeleteMarked {
  time: Date;
  path: string;
  isDir: boolean;
}
export interface FileTree {
  name: string;
  path: string;
  size: string;
  fileType: string;
  mimeType: string;
  isDir: boolean;
  isFavorite: boolean;
  seeTime: number;
}

export class FileService {
  /**
   * Метод проверяет, хватает ли места на диске.
   * Если места хватает, то создаёт папку пользователя.
   */
  static createUserDir(user: UserDir, basePath: string): Promise<string>

  /** Метод сохраняет файл в папку пользователя */
  static saveFile(file: UserFile, uuid: string, basePath: string): Promise<void>

  /** Метод получения файла по пути */
  static getFile(path: string): Promise<UserFile>

  /** Метод возвращает файлы, которые находятся в директории по заданному пути */
  static getFileTree(path: string, basePath: string): Promise<Array<FileTree>>

  /** Метод переименовывает название директории или файла */
  static rename(path: string, newPath: string): Promise<void>

  /** Метод помечает директорию или файл как удалённую */
  static markAsDelete(path: string): Promise<DeleteMarked>

  /** Метод создаёт директорию по заданному пути */
  static createDir(dirPath: string): Promise<void>

  /** Метод переносит файлы по заданному пути */
  static movePath(pathFrom: string, pathTo: string): Promise<void>

  /** Метод устанавливает статус директории */
  static setFavorite(path: string, state: boolean): Promise<void>

  /** Метод получает метаданные директории или файла */
  static getFilesMetadata(paths: Array<string>, basePath: string): Promise<Array<FileTree>>
}
